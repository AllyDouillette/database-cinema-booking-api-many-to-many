// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id          Int       @id @default(autoincrement())
  name        String
  contact     Contact?
  tickets     Ticket[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Contact {
  id          Int       @id @default(autoincrement())
  customer    Customer  @relation(fields: [customerId], references: [id])
  customerId  Int       @unique
  phone       String
  email       String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Movie {
  id          Int         @id @default(autoincrement())
  screenings  Screening[]
  title       String
  runtimeMins Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Screen {
  id          Int @id @default(autoincrement())
  number      Int
  screenings  Screening[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Screening {
  id          Int       @id @default(autoincrement())
  tickets     Ticket[]
  movieId     Int
  movie       Movie     @relation(fields: [movieId], references: [id])
  screenId    Int     
  screen      Screen    @relation(fields: [screenId], references: [id])
  startsAt    DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Ticket {
  id            Int       @id @default(autoincrement())
  screeningId   Int
  screening     Screening @relation(fields: [screeningId], references: [id])
  customerId    Int
  customer      Customer  @relation(fields: [customerId], references: [id])
  seats         Seat[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Seat {
  id            Int       @id @default(autoincrement())
  seatRow       String
  seatNum       Int
  tickets       Ticket[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}